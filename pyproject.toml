[tool.poetry]
name = "recipe-recommender"
version = "0.1.0"
description = "Une application web de recommandation de recettes basée sur les préférences utilisateur"
authors = ["tealamenta"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/tealamenta/recipe-recommender"
repository = "https://github.com/tealamenta/recipe-recommender"
keywords = ["recipes", "recommender-system", "streamlit", "food", "machine-learning"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[tool.poetry.dependencies]
python = "^3.10"
streamlit = "^1.29.0"
pandas = "^2.1.4"
numpy = "^1.26.2"
scikit-learn = "^1.3.2"
matplotlib = "^3.8.2"
python-dotenv = "^1.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
black = "^23.12.1"
flake8 = "^6.1.0"
mypy = "^1.7.1"
sphinx = "^7.2.6"
sphinx-rtd-theme = "^2.0.0"
pre-commit = "^3.6.0"
interrogate = "^1.5.0"

[tool.poetry.scripts]
recipe-app = "recipe_recommender.app:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --cov=src/recipe_recommender --cov-report=term-missing --cov-report=html --cov-fail-under=90"
testpaths = ["tests"]
pythonpath = ["src"]

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "streamlit.*",
    "sklearn.*",
    "matplotlib.*",
]
ignore_missing_imports = true

[tool.interrogate]
ignore-init-method = true
ignore-init-module = false
ignore-magic = false
ignore-semiprivate = false
ignore-private = false
ignore-property-decorators = false
ignore-module = false
ignore-nested-functions = false
ignore-nested-classes = true
ignore-setters = false
fail-under = 95
exclude = ["setup.py", "docs", "build", "tests"]
verbose = 2
quiet = false
whitelist-regex = []
color = true
