name: Weekly Health Check
permissions:
  issues: write
  contents: read
on:
  schedule:
    # Tous les lundis Ã  9h UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

jobs:
  health:
    name: Project Health Check
    runs-on: ubuntu-latest
    
    steps:
    - name:  Checkout code
      uses: actions/checkout@v4
      with:
        ref: master
        fetch-depth: 0
    
    - name:  Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    
    - name:  Install Poetry
      uses: snok/install-poetry@v1

    - name:  Clean Python cache
      run: |
        find . -type d -name "__pycache__" -exec rm -rf {} + 2>/dev/null || true
        find . -type f -name "*.pyc" -delete 2>/dev/null || true
        find . -type f -name "*.pyo" -delete 2>/dev/null || true
    
    - name:  Install dependencies
      run: poetry install

    - name:  Debug - Verify test file
      run: |
        echo "=== Git commit info ==="
        git log -1 --oneline
        echo ""
        echo "=== Full path ==="
        pwd
        ls -la tests/
        echo ""
        echo "=== Content of line 32 ==="
        sed -n '32p' tests/test_app.py
        echo ""
        echo "=== Lines 30-35 ==="
        sed -n '30,35p' tests/test_app.py
        echo ""
        echo "=== Search for load_recipes ==="
        grep -n "load_recipes" tests/test_app.py || echo "NOT FOUND (good)"
        echo ""
        echo "=== Search for load_data ==="
        grep -n "load_data" tests/test_app.py || echo "NOT FOUND (bad)"
        echo ""
        echo "=== File checksum ==="
        md5sum tests/test_app.py
    
    - name:  Run all tests
      run: poetry run pytest tests/ -v --tb=short --cache-clear

    
    - name:  Code metrics
      run: |
        echo "## Code Metrics Report" > metrics.md
        echo "" >> metrics.md
        echo "### Complexity" >> metrics.md
        poetry run radon cc src/recipe_recommender/ -a >> metrics.md
        echo "" >> metrics.md
        echo "### Maintainability Index" >> metrics.md
        poetry run radon mi src/recipe_recommender/ >> metrics.md
    
    - name:  Dependency audit
      run: |
        poetry show --outdated
      continue-on-error: true
    
    - name:  Create issue if failures
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: ' Weekly Health Check Failed',
            body: 'The weekly health check has detected issues. Please review the workflow logs.',
            labels: ['health-check', 'automated']
          })
