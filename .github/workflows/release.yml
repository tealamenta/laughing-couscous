name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
    
    steps:
    - name:  Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name:  Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    
    - name:  Install Poetry
      uses: snok/install-poetry@v1
    
    - name:  Run tests
      run: |
        poetry install
        poetry run pytest tests/ -v
    
    - name:  Get metrics
      id: metrics
      run: |
        COMPLEXITY=$(poetry run radon cc src/recipe_recommender/ -a --total-average | grep "Average complexity" | awk '{print $NF}' | tr -d '()')
        TESTS=$(poetry run pytest tests/ --co -q | wc -l)
        echo "complexity=$COMPLEXITY" >> $GITHUB_OUTPUT
        echo "tests=$TESTS" >> $GITHUB_OUTPUT
    
    - name:  Generate changelog
      id: changelog
      run: |
        echo "## What's Changed" > CHANGELOG.md
        git log $(git describe --tags --abbrev=0 HEAD^)..HEAD --pretty=format:"- %s (%h)" >> CHANGELOG.md
    
    - name:  Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          ## Recipe Recommender ${{ github.ref_name }}
          
          ###  Metrics
          - **Complexity Grade**: ${{ steps.metrics.outputs.complexity }}
          - **Tests**: ${{ steps.metrics.outputs.tests }} passing
          - **Coverage**: 41% (95%+ core modules)
          
          ###  Features
          - 4 interactive Plotly visualizations
          - ML-based recommendation system
          - 23 international cuisines
          - 10 dietary preferences
          
          ###  Installation
          ```bash
          git clone https://github.com/tealamenta/recipe-recommender.git
          cd recipe-recommender
          poetry install
          poetry run streamlit run src/recipe_recommender/app.py
          ```
          
          ###  Docker
          ```bash
          docker-compose up -d
          ```
          
          ---
          
          ${{ steps.changelog.outputs.body }}
        draft: false
        prerelease: false

  docker-publish:
    name: Publish Docker Image
    runs-on: ubuntu-latest
    needs: release
    
    steps:
    - name:  Checkout code
      uses: actions/checkout@v4
    
    - name:  Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name:  Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
      if: github.event_name != 'pull_request'
    
    - name:  Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: tealamenta/recipe-recommender
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest
    
    - name:  Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
